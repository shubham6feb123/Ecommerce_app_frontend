{"version":3,"sources":["functions/userOrders.js","pages/user/History.js"],"names":["getUserOrders","authtoken","axios","post","process","headers","History","useState","getOrders","setGetOrders","user","useSelector","state","history","useHistory","useEffect","getAllOrders","token","orders","data","message","error","content","style","position","bottom","right","push","className","map","product","padding","margin","products","item","status","orderStatus","color","price","title","image","images","secure_url","count","_id","invoicePdf","Loading","OrdersCard","src","alt","substring","value","displayType","thousandSeparator","prefix","backgroundColor","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","fontSize","textAlign","author","marginBottom","subtitle","text","marginVertical","marginHorizontal","header","footer","pageNumber","left","document","size","fixed","Date","updatedAt","toDateString","Logo","borderRadius","objectFit","getContent","x","brand","display","flexDirection","orderdBy","name","email","details","mobileNumber","city","address","pincode","paymentIntent","id","amount","suffix","fileName","FilePdfFilled"],"mappings":"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","file":"static/js/13.f0866f42.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const getUserOrders = async(authtoken)=>{\n    return await axios.post(`${process.env.REACT_APP_API}/user/orders`,{},{\n        headers:{\n            authtoken:authtoken\n        }\n    })\n}","import React, { useEffect, useState } from \"react\";\n\n//css\nimport \"./history.css\";\n\n//components\nimport {FilePdfFilled } from \"@ant-design/icons\";\nimport CurrencyFormatter from \"react-currency-format\";\nimport { useSelector } from \"react-redux\";\nimport { getUserOrders } from \"../../functions/userOrders\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFDownloadLink,\n  Image,\n} from \"@react-pdf/renderer\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  DataTableCell,\n} from \"@david.kucsai/react-pdf-table\";\nimport Logo from \"../../components/nav/flipkartLogo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport { message } from \"antd\";\n\nfunction History() {\n  const [getOrders, setGetOrders] = useState(null);\n  const { user } = useSelector((state) => ({ ...state }));\n  const history = useHistory();\n  useEffect(() => {\n    if (user) getAllOrders(user?.token);\n  }, [user]);\n\n  const getAllOrders = async (authtoken) => {\n    try {\n      const orders = await getUserOrders(authtoken);\n      // console.log(\"orders--->\", orders);\n      setGetOrders(orders.data);\n    } catch (error) {\n      setGetOrders(null);\n      message.error({content:\"No orders are available!\",style:{position:\"fixed\",bottom:\"0px\",right:\"35%\"}})\n       history.push(\"/\")\n    }\n  };\n  return getOrders ? (\n    <div className=\"orders\">\n      <div className=\"orders__container\">\n        {/* //orders card */}\n        {getOrders?.map((product) => (\n          <>\n            <div\n              key={product._id}\n              style={{\n                padding: \"0px 17px 0px 0px\",\n                margin: \"0px 0px 20px 0px\",\n              }}\n            >\n              {product?.products?.map((item) => (\n                <OrdersCard\n                  key={item?._id}\n                  status={product?.orderStatus}\n                  color={item?.color}\n                  price={item?.product?.price}\n                  title={item?.product?.title}\n                  image={item?.product?.images[0]?.secure_url}\n                  count={item?.count}\n                />\n              ))}\n              {invoicePdf(product,user)}\n            </div>\n          </>\n        ))}\n      </div>\n    </div>\n  ) : (\n    <Loading />\n  );\n}\n\nexport default History;\n\nconst OrdersCard = ({ status, color, price, title, image, count }) => {\n  return (\n    <>\n      <div className=\"orders__card__container\">\n        <div>\n          <div className=\"image__section\">\n            <img src={image} alt=\"product\" />\n          </div>\n          <div className=\"content__section\">\n            <div className=\"content__section__heading\">\n              {/* RCM REVITO HAIR OIL Hair Oil (450 g) */}\n              {title?.substring(0, 30)}\n            </div>\n            {/* color section */}\n            <div className=\"content__section__color\">\n              <span>Color :</span>\n              <span>{color}</span>\n            </div>\n            {/* count section */}\n            <div className=\"content__section__color\">\n              <span>Quantity :</span>\n              <span>{count}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"price__section\">\n            <CurrencyFormatter\n              value={price}\n              displayType={\"text\"}\n              thousandSeparator={true}\n              prefix={\"â‚¹\"}\n            />\n          </div>\n          <div className=\"status__section\">\n            <span style={status===\"Cancelled\"?{backgroundColor:\"red\"}:{backgroundColor:\"#4EA642\"}}></span>\n            <span>{status}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\n//show payment info invoice pdf\nconst invoicePdf = (product,user) => {\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 35,\n      paddingBottom: 65,\n      paddingHorizontal: 35,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      // color:\"#1E70FA\"\n    },\n    author: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 40,\n    },\n    subtitle: {\n      fontSize: 18,\n      margin: 12,\n    },\n    text: {\n      margin: 12,\n      fontSize: 14,\n      // textAlign: \"justify\",\n    },\n    image: {\n      marginVertical: 15,\n      marginHorizontal: 100,\n    },\n    header: {\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n    footer: {\n      padding: \"100px\",\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"#f08527\",\n    },\n    pageNumber: {\n      position: \"absolute\",\n      fontSize: 12,\n      bottom: 30,\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n  });\n  // console.log(\"from pdf section\", product);\n  return (\n    <PDFDownloadLink\n      document={\n        <Document>\n          <Page size=\"A4\" style={styles.body}>\n            <Text style={styles.header} fixed>\n              ~ {new Date(product.updatedAt).toDateString()} ~\n            </Text>\n            <Text style={styles.title}>Order Invoice</Text>\n            <Text style={styles.author}>\n              <Image\n                src={Logo}\n                style={{ borderRadius: \"50%\", objectFit: \"cover\" }}\n                alt=\"flipshop\"\n              />\n              FlipShop\n            </Text>\n            <Text style={styles.subtitle}>Order Summary</Text>\n            <Table>\n              <TableHeader>\n                <TableCell>Product</TableCell>\n                <TableCell>Quantity</TableCell>\n                <TableCell>Color</TableCell>\n                <TableCell>Brand</TableCell>\n                <TableCell>Price</TableCell>\n              </TableHeader>\n            </Table>\n            <Table data={product.products}>\n              <TableBody>\n                <DataTableCell getContent={(x) => x.product.title.substring(0,100)} />\n                <DataTableCell getContent={(x) => x.count} />\n                <DataTableCell getContent={(x) => x.color} />\n                <DataTableCell getContent={(x) => `${x.product.brand}`} />\n                <DataTableCell getContent={(x) => x.product.price} />\n              </TableBody>\n            </Table>\n            <View style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Text style={styles.text}>\n              <Text>\n                  Bill To: {product.orderdBy.name}\n                  {\"                                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                 Email: {product.orderdBy.email}{\"                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                 Mobile Number: {product.orderdBy.details.mobileNumber}{\"                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                 City: {product.orderdBy.details.city}{\"                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                 State: {product.orderdBy.details.state}{\"                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                 Address: {product.orderdBy.details.address}{\"                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                 Pincode: {product.orderdBy.details.pincode}{\"                                                                  \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                  Order Id: {product.paymentIntent.id}  {\"                                            \"} \n                </Text>\n                {\"\\n\"}\n                <Text>\n                  Order Status: {product.orderStatus} {\"                         \"}{\" \"}\n                </Text>\n                {\"\\n\"}\n                <Text>\n                  Total Paid:{\" \"}\n                  {\n                    <CurrencyFormatter\n                      value={`${product.paymentIntent.amount/100}`}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\" Rs.\"}\n                    />\n                  }\n\n                </Text>\n              </Text>\n            </View>\n            <Text style={styles.footer}>\n              ~~~ Thank you for shopping with us ~~~\n            </Text>\n          </Page>\n        </Document>\n      }\n      fileName=\"invoice.pdf\"\n    >\n      <div className=\"invoice__download\">\n        {<FilePdfFilled />} Invoice Download\n      </div>\n    </PDFDownloadLink>\n  );\n};\n"],"sourceRoot":""}