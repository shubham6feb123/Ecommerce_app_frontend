{"version":3,"sources":["pages/auth/ForgotPassword.js"],"names":["antIcon","style","fontSize","spin","ForgotPassword","useState","email","setEmail","loading","setLoading","history","useHistory","user","useSelector","state","useEffect","token","push","onFinish","e","values","toast","error","position","config","url","process","handleCodeInApp","auth","sendPasswordResetEmail","success","className","src","image","alt","name","initialValues","remember","Item","rules","required","message","prefix","placeholder","value","onChange","target","type","htmlType","size","width","indicator"],"mappings":"sRAeMA,EAAU,cAAC,IAAe,CAACC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAwF/CC,UAtFf,WACE,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA6BF,oBAAS,GAAM,mBAArCG,EAAO,KAACC,EAAU,KACnBC,EAAUC,cACXC,EAAQC,aAAY,SAACC,GAAK,sBAAQA,EAAK,IAAvCF,KACPG,qBAAU,WAMR,OAAO,WAJJH,GAAQA,EAAKI,OACdN,EAAQO,KAAK,IAGU,CAC3B,GAAE,CAACL,EAAKF,IAEN,IAAMQ,EAAQ,iDAAG,WAAOC,EAAEC,GAAM,6FAE5Bd,EAAM,CAAC,EAAF,aAIU,OAHjBe,IAAMC,MAAM,0BAA0B,CACpCC,SAAU,iBAEZd,GAAW,GAAM,0BAOlB,OAJHA,GAAW,GACHe,EAAS,CACbC,IAAKC,qCACLC,iBAAiB,GACjB,EAAD,OAEKC,IAAKC,uBAAuBvB,EAAMkB,GAAO,OAC/CH,IAAMS,QAAQ,4CAA4C,CACxDP,SAAU,iBAGZd,GAAW,GAAM,kDAEjBA,GAAW,GACXY,IAAMC,MAAM,0BAA0B,CACpCC,SAAU,iBACV,0DAED,gBA3Ba,wCAiCd,OACE,mCACA,sBAAKQ,UAAU,mBAAkB,UAC/B,qBAAKA,UAAU,gBAAe,SAC5B,qBAAKC,IAAKC,IAAOC,IAAI,WAEzB,eAAC,IAAI,CACHC,KAAK,eACLJ,UAAU,aACVK,cAAe,CACbC,UAAU,GAEZnB,SAAUA,EAAS,UAEnB,cAAC,IAAKoB,KAAI,CACRH,KAAK,WACLI,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAEX,SAEF,cAAC,IAAK,CAACC,OAAQ,cAAC,IAAY,CAACX,UAAU,wBAA0BY,YAAY,QAAQC,MAAOtC,EAAOuC,SA3BpF,SAAC1B,GACpBZ,EAASY,EAAE2B,OAAOF,MACpB,MA8BI,cAAC,IAAKN,KAAI,UACR,cAAC,IAAM,CAACS,KAAK,UAAUC,SAAS,SAASjB,UAAU,oBAAoBkB,KAAK,SAAShD,MAAO,CAACiD,MAAM,QAAQ,SACzG1C,EAAS,cAAC,IAAI,CAAC2C,UAAWnD,IAAe,mBAOnD,C","file":"static/js/21.ce6b5a6d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\n\n//css\nimport \"./forgotpassword.css\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router\";\nimport {useSelector} from 'react-redux';\n\n//components\nimport { Form, Input, Button,Spin} from 'antd';\nimport { UserOutlined,LoadingOutlined} from '@ant-design/icons';\n\nimport image from '../../images/logo.png';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [loading,setLoading] = useState(false);\n  const history = useHistory();\nconst {user} = useSelector((state)=>({...state}));\nuseEffect(()=>{\n  const unsubscribe = ()=>{\n  if(user && user.token){\n    history.push('/')\n  }}\n\n  return ()=>unsubscribe();\n},[user,history]);\n\n  const onFinish = async (e,values) => {\ntry {\n  if(!email){\n    toast.error(\"Please enter your email\",{\n      position: \"bottom-right\"\n    })\n    setLoading(false)\n    return ;\n  }\nsetLoading(true)\n  const config = {\n    url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL,\n    handleCodeInApp: true,\n  };\n\n  await auth.sendPasswordResetEmail(email,config)\n  toast.success('password reset link is sent to your email',{\n    position: \"bottom-right\"\n  })\n\n  setLoading(false)\n} catch (error) {\n  setLoading(false)\n  toast.error(\"Email is not registered\",{\n    position: \"bottom-right\"\n  })\n}\n  };\n\n  const handleChange = (e) => {\n    setEmail(e.target.value)\n  };\n\n  return (\n    <>\n    <div className=\"forgot__password\">\n      <div className=\"logo__wrapper\">\n        <img src={image} alt=\"logo\"/>\n      </div>\n    <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please enter your Email',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" value={email} onChange={handleChange} />\n      </Form.Item>\n     \n     \n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" size=\"middle\" style={{width:'100%'}}>\n         {loading?(<Spin indicator={antIcon} />) : 'Reset'}\n        </Button>\n      </Form.Item>\n    </Form>\n    </div>\n    </>\n  );\n}\n\nexport default ForgotPassword;"],"sourceRoot":""}