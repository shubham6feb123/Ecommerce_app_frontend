{"version":3,"sources":["functions/coupon.js","functions/getUserCart.js","functions/payment.js","functions/stripe.js","functions/deleteUserCart.js","components/form/StripeCheckOut.js","pages/payment/globe.mp4","pages/payment/Payment.js"],"names":["Create","coupon","email","axios","post","process","headers","Remove","couponId","delete","List","get","verifyCoupon","code","authtoken","verify","createOrder","stripeResponse","message","getCart","verifyUser","id","user","createPaymentIntent","deleteUserCart","Id","StripeCheckOut","token","useSelector","state","useState","succeeded","setSucceeded","error","setError","processing","setProcessing","disable","setDisable","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","history","useHistory","cartId","setCartId","useEffect","payment","res","data","console","log","handleSubmit","e","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","name","target","value","payload","push","makeOrer","JSON","stringify","getUserCart","cart","_id","order","ok","cartdeleted","window","localStorage","removeItem","className","onSubmit","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","onChange","empty","disabled","promise","loadStripe","Payment","useParams","src","globe","autoPlay","loop","muted"],"mappings":"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","file":"static/js/12.12da44c1.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const Create = async (coupon, email) => {\n  // console.log(\"coupon\",coupon)\n  return await axios.post(\n    `${process.env.REACT_APP_API}/coupon/create`,\n    coupon,\n    {\n      headers: {\n        email: email,\n      },\n    }\n  );\n};\n\nexport const Remove = async (couponId, email) => {\n  return await axios.delete(\n    `${process.env.REACT_APP_API}/coupon/remove/${couponId}`,\n    {\n      headers: {\n        email: email,\n      },\n    }\n  );\n};\n\nexport const List = async () => {\n  return await axios.get(`${process.env.REACT_APP_API}/coupon/list`);\n};\n\nexport const verifyCoupon = async (code, authtoken) => {\n  return await axios.post(\n    `${process.env.REACT_APP_API}/coupon/verify`,\n    { verify: code },\n    {\n      headers: {\n        authtoken: authtoken,\n      },\n    }\n  );\n};\n\nexport const createOrder = async (stripeResponse, authtoken) => {\n  return await axios.post(\n    `${process.env.REACT_APP_API}/user/order`,\n    { stripeResponse: stripeResponse },\n    {\n      headers: {\n        authtoken: authtoken,\n        message:\"order create kr rhe h\"\n      },\n    }\n  );\n};\n","import axios from \"axios\";\n\nconst getCart = async(email)=>{\n    return await axios.get(`${process.env.REACT_APP_API}/user/cart/${email}`)\n}\n\nexport default getCart;","import axios from \"axios\"\nexport const verifyUser = async(id)=>{\nreturn await axios.post(`${process.env.REACT_APP_API}/payment/user/verify`,{\n    user:id,\n})\n}","import axios from \"axios\";\n\nexport const createPaymentIntent = async(authtoken)=>{\nreturn await axios.post(`${process.env.REACT_APP_API}/create-payment-intent`,{},{\n    headers:{\n        authtoken:authtoken,\n    }\n})\n\n\n}","import axios from \"axios\";\n\nconst deleteUserCart = async(Id)=>{\nreturn await axios.delete(`${process.env.REACT_APP_API}/user/cart/delete/${Id}`);\n}\n\nexport default deleteUserCart;","import React, { useState,useEffect } from 'react'\n\n//components\nimport {CardElement,useStripe,useElements} from \"@stripe/react-stripe-js\";\nimport {createPaymentIntent} from \"../../functions/stripe\"; \nimport {useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { createOrder } from '../../functions/coupon';\nimport deleteUserCart from '../../functions/deleteUserCart';\nimport  getUserCart  from '../../functions/getUserCart';\n\nconst StripeCheckOut = ({token}) => {\n    // const dispatch = useDispatch();\n    const {user} = useSelector((state)=>({...state}))\n    const [succeeded,setSucceeded] = useState(false);\n    const [error,setError] = useState(null);\n    const [processing,setProcessing] = useState('');\n    const [disable,setDisable] = useState(true);\n    const [clientSecret,setClientSecret] = useState('');\n    const stripe = useStripe();\n    const elements = useElements();\n    const history = useHistory();\n    const [cartId,setCartId] = useState(\"\")\n\n    useEffect(()=>{\n        if(user)\n        payment();\n        getCart();\n        // eslint-disable-next-line\n    },[user])\n\n    const payment = async()=>{\n     const res = await createPaymentIntent(user?.token)\n     setClientSecret(res.data.clientSecret)\n     console.log(\"payment res\",res)\n    }\n\n    const handleSubmit = async(e)=>{\n       e.preventDefault();\n       setProcessing(true)\n       let payload = await stripe.confirmCardPayment(clientSecret,{\n           payment_method:{\n               card:elements.getElement(CardElement),\n               billing_details:{\n                   name:e.target.name.value,\n               },\n           }\n       })\n\n       if(payload.error){\n           setError(`Payment failed ${payload.error.message}`)\n           setProcessing(false)\n           history.push(`/payment/failed/${token}`)\n       }else{\n        //here we can get result of successfull payment\n        makeOrer(payload,user?.token);\n        console.log(\"buy seccessfull\",payload)\n        console.log(JSON.stringify(payload,null,4))\n        setError(null)\n        setProcessing(false)\n        setSucceeded(true)\n        history.push(`/payment/successful/${token}`)\n       }\n    }\n\n    const handleChange = (e)=>{\n        // console.log(\"payment sumbit\",e);\n        setDisable(e.empty);\n        setError(e.error?e.error.message:'')\n    }\n\n    //stripe cart style\n    const cartStyle = {\n        style: {\n          base: {\n            color: \"#32325d\",\n            fontFamily: \"Arial, sans-serif\",\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n              color: \"#32325d\",\n            },\n          },\n          invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\",\n          },\n        },\n      };\n\n      //get cart\n   const getCart = async()=>{\n     const cart = await getUserCart(user?.email);\n            console.log(\"cart from back\",cart);\n        setCartId(cart.data._id)\n   }   \n\n    //create order\n    const makeOrer = async(stripeResponse,authtoken)=>{\n      // console.log(\"make order k andr se\")\n     const order = await createOrder(stripeResponse,authtoken);\n     console.log(\"order created\",order)\n     if(order.data.ok&&cartId){\n       const cartdeleted = await deleteUserCart(cartId);\n       console.log(\"cart deleted\",cartdeleted)\n       if(cartdeleted){\n         window.localStorage.removeItem(\"cart\")\n       }\n     }\n    }  \n\n    return (\n        <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\n      <CardElement id=\"card-element\" options={cartStyle} onChange={handleChange} />\n      <button disabled={processing || disable || succeeded} id=\"submit\" className=\"stripe-button\" >\n        <span id=\"button-text\">\n          {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n        </span>\n      </button>\n      {/* Show any error or success messages */}\n      {error && <div id=\"payment-message\" className=\"card-error\">{error}</div>}\n    </form>\n    )\n}\n\nexport default StripeCheckOut\n","export default __webpack_public_path__ + \"static/media/globe.655d2823.mp4\";","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { verifyUser } from \"../../functions/payment\";\nimport { useHistory } from \"react-router-dom\";\n//css\nimport \"../../stripe.css\";\nimport \"./payment.css\";\n\n//components\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport StripeCheckOut from \"../../components/form/StripeCheckOut\";\nimport globe from \"./globe.mp4\";\n\nconst promise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\n\nfunction Payment() {\n  const { user } = useParams();\n  const history = useHistory();\n  console.log(\"params\", user);\n  useEffect(() => {\n    verify();\n    // eslint-disable-next-line\n  }, [user]);\n  const verify = async () => {\n    try {\n      await verifyUser(user);\n    } catch (error) {\n      console.log(\"error\", error);\n      history.push(`/checkout`);\n    }\n  };\n  return (\n    <>\n      <div className=\"payment\">\n        <Elements stripe={promise}>\n          <div className=\"payment__container\">\n            <div className=\"payment__heading\">Confirm Purchase</div>\n            <video src={globe} autoPlay={true} loop muted />\n            <StripeCheckOut token={user} />\n          </div>\n        </Elements>\n      </div>\n    </>\n  );\n}\n\nexport default Payment;\n"],"sourceRoot":""}